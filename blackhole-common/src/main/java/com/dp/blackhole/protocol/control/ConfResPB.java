// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfRes.proto

package com.dp.blackhole.protocol.control;

public final class ConfResPB {
  private ConfResPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ConfRes extends
      com.google.protobuf.GeneratedMessage {
    // Use ConfRes.newBuilder() to construct.
    private ConfRes() {
      initFields();
    }
    private ConfRes(boolean noInit) {}
    
    private static final ConfRes defaultInstance;
    public static ConfRes getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConfRes getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dp.blackhole.protocol.control.ConfResPB.internal_static_blackhole_ConfRes_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dp.blackhole.protocol.control.ConfResPB.internal_static_blackhole_ConfRes_fieldAccessorTable;
    }
    
    public static final class AppConfRes extends
        com.google.protobuf.GeneratedMessage {
      // Use AppConfRes.newBuilder() to construct.
      private AppConfRes() {
        initFields();
      }
      private AppConfRes(boolean noInit) {}
      
      private static final AppConfRes defaultInstance;
      public static AppConfRes getDefaultInstance() {
        return defaultInstance;
      }
      
      public AppConfRes getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dp.blackhole.protocol.control.ConfResPB.internal_static_blackhole_ConfRes_AppConfRes_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dp.blackhole.protocol.control.ConfResPB.internal_static_blackhole_ConfRes_AppConfRes_fieldAccessorTable;
      }
      
      // required string app_name = 1;
      public static final int APP_NAME_FIELD_NUMBER = 1;
      private boolean hasAppName;
      private java.lang.String appName_ = "";
      public boolean hasAppName() { return hasAppName; }
      public java.lang.String getAppName() { return appName_; }
      
      // required string watch_file = 2;
      public static final int WATCH_FILE_FIELD_NUMBER = 2;
      private boolean hasWatchFile;
      private java.lang.String watchFile_ = "";
      public boolean hasWatchFile() { return hasWatchFile; }
      public java.lang.String getWatchFile() { return watchFile_; }
      
      // required string period = 3 [default = "3600"];
      public static final int PERIOD_FIELD_NUMBER = 3;
      private boolean hasPeriod;
      private java.lang.String period_ = "3600";
      public boolean hasPeriod() { return hasPeriod; }
      public java.lang.String getPeriod() { return period_; }
      
      // optional string max_line_size = 4 [default = "65536"];
      public static final int MAX_LINE_SIZE_FIELD_NUMBER = 4;
      private boolean hasMaxLineSize;
      private java.lang.String maxLineSize_ = "65536";
      public boolean hasMaxLineSize() { return hasMaxLineSize; }
      public java.lang.String getMaxLineSize() { return maxLineSize_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasAppName) return false;
        if (!hasWatchFile) return false;
        if (!hasPeriod) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasAppName()) {
          output.writeString(1, getAppName());
        }
        if (hasWatchFile()) {
          output.writeString(2, getWatchFile());
        }
        if (hasPeriod()) {
          output.writeString(3, getPeriod());
        }
        if (hasMaxLineSize()) {
          output.writeString(4, getMaxLineSize());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasAppName()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getAppName());
        }
        if (hasWatchFile()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getWatchFile());
        }
        if (hasPeriod()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getPeriod());
        }
        if (hasMaxLineSize()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getMaxLineSize());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes result;
        
        // Construct using com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes();
          return builder;
        }
        
        protected com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.getDescriptor();
        }
        
        public com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes getDefaultInstanceForType() {
          return com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes) {
            return mergeFrom((com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes other) {
          if (other == com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.getDefaultInstance()) return this;
          if (other.hasAppName()) {
            setAppName(other.getAppName());
          }
          if (other.hasWatchFile()) {
            setWatchFile(other.getWatchFile());
          }
          if (other.hasPeriod()) {
            setPeriod(other.getPeriod());
          }
          if (other.hasMaxLineSize()) {
            setMaxLineSize(other.getMaxLineSize());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setAppName(input.readString());
                break;
              }
              case 18: {
                setWatchFile(input.readString());
                break;
              }
              case 26: {
                setPeriod(input.readString());
                break;
              }
              case 34: {
                setMaxLineSize(input.readString());
                break;
              }
            }
          }
        }
        
        
        // required string app_name = 1;
        public boolean hasAppName() {
          return result.hasAppName();
        }
        public java.lang.String getAppName() {
          return result.getAppName();
        }
        public Builder setAppName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppName = true;
          result.appName_ = value;
          return this;
        }
        public Builder clearAppName() {
          result.hasAppName = false;
          result.appName_ = getDefaultInstance().getAppName();
          return this;
        }
        
        // required string watch_file = 2;
        public boolean hasWatchFile() {
          return result.hasWatchFile();
        }
        public java.lang.String getWatchFile() {
          return result.getWatchFile();
        }
        public Builder setWatchFile(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasWatchFile = true;
          result.watchFile_ = value;
          return this;
        }
        public Builder clearWatchFile() {
          result.hasWatchFile = false;
          result.watchFile_ = getDefaultInstance().getWatchFile();
          return this;
        }
        
        // required string period = 3 [default = "3600"];
        public boolean hasPeriod() {
          return result.hasPeriod();
        }
        public java.lang.String getPeriod() {
          return result.getPeriod();
        }
        public Builder setPeriod(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPeriod = true;
          result.period_ = value;
          return this;
        }
        public Builder clearPeriod() {
          result.hasPeriod = false;
          result.period_ = getDefaultInstance().getPeriod();
          return this;
        }
        
        // optional string max_line_size = 4 [default = "65536"];
        public boolean hasMaxLineSize() {
          return result.hasMaxLineSize();
        }
        public java.lang.String getMaxLineSize() {
          return result.getMaxLineSize();
        }
        public Builder setMaxLineSize(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasMaxLineSize = true;
          result.maxLineSize_ = value;
          return this;
        }
        public Builder clearMaxLineSize() {
          result.hasMaxLineSize = false;
          result.maxLineSize_ = getDefaultInstance().getMaxLineSize();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:blackhole.ConfRes.AppConfRes)
      }
      
      static {
        defaultInstance = new AppConfRes(true);
        com.dp.blackhole.protocol.control.ConfResPB.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:blackhole.ConfRes.AppConfRes)
    }
    
    // repeated .blackhole.ConfRes.AppConfRes appConfRes = 1;
    public static final int APPCONFRES_FIELD_NUMBER = 1;
    private java.util.List<com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes> appConfRes_ =
      java.util.Collections.emptyList();
    public java.util.List<com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes> getAppConfResList() {
      return appConfRes_;
    }
    public int getAppConfResCount() { return appConfRes_.size(); }
    public com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes getAppConfRes(int index) {
      return appConfRes_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes element : getAppConfResList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes element : getAppConfResList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes element : getAppConfResList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.ConfResPB.ConfRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dp.blackhole.protocol.control.ConfResPB.ConfRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.dp.blackhole.protocol.control.ConfResPB.ConfRes result;
      
      // Construct using com.dp.blackhole.protocol.control.ConfResPB.ConfRes.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.dp.blackhole.protocol.control.ConfResPB.ConfRes();
        return builder;
      }
      
      protected com.dp.blackhole.protocol.control.ConfResPB.ConfRes internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.dp.blackhole.protocol.control.ConfResPB.ConfRes();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dp.blackhole.protocol.control.ConfResPB.ConfRes.getDescriptor();
      }
      
      public com.dp.blackhole.protocol.control.ConfResPB.ConfRes getDefaultInstanceForType() {
        return com.dp.blackhole.protocol.control.ConfResPB.ConfRes.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.dp.blackhole.protocol.control.ConfResPB.ConfRes build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.dp.blackhole.protocol.control.ConfResPB.ConfRes buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.dp.blackhole.protocol.control.ConfResPB.ConfRes buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.appConfRes_ != java.util.Collections.EMPTY_LIST) {
          result.appConfRes_ =
            java.util.Collections.unmodifiableList(result.appConfRes_);
        }
        com.dp.blackhole.protocol.control.ConfResPB.ConfRes returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dp.blackhole.protocol.control.ConfResPB.ConfRes) {
          return mergeFrom((com.dp.blackhole.protocol.control.ConfResPB.ConfRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.dp.blackhole.protocol.control.ConfResPB.ConfRes other) {
        if (other == com.dp.blackhole.protocol.control.ConfResPB.ConfRes.getDefaultInstance()) return this;
        if (!other.appConfRes_.isEmpty()) {
          if (result.appConfRes_.isEmpty()) {
            result.appConfRes_ = new java.util.ArrayList<com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes>();
          }
          result.appConfRes_.addAll(other.appConfRes_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.Builder subBuilder = com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAppConfRes(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .blackhole.ConfRes.AppConfRes appConfRes = 1;
      public java.util.List<com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes> getAppConfResList() {
        return java.util.Collections.unmodifiableList(result.appConfRes_);
      }
      public int getAppConfResCount() {
        return result.getAppConfResCount();
      }
      public com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes getAppConfRes(int index) {
        return result.getAppConfRes(index);
      }
      public Builder setAppConfRes(int index, com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.appConfRes_.set(index, value);
        return this;
      }
      public Builder setAppConfRes(int index, com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.Builder builderForValue) {
        result.appConfRes_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAppConfRes(com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.appConfRes_.isEmpty()) {
          result.appConfRes_ = new java.util.ArrayList<com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes>();
        }
        result.appConfRes_.add(value);
        return this;
      }
      public Builder addAppConfRes(com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.Builder builderForValue) {
        if (result.appConfRes_.isEmpty()) {
          result.appConfRes_ = new java.util.ArrayList<com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes>();
        }
        result.appConfRes_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAppConfRes(
          java.lang.Iterable<? extends com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes> values) {
        if (result.appConfRes_.isEmpty()) {
          result.appConfRes_ = new java.util.ArrayList<com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes>();
        }
        super.addAll(values, result.appConfRes_);
        return this;
      }
      public Builder clearAppConfRes() {
        result.appConfRes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:blackhole.ConfRes)
    }
    
    static {
      defaultInstance = new ConfRes(true);
      com.dp.blackhole.protocol.control.ConfResPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:blackhole.ConfRes)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_ConfRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_ConfRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_ConfRes_AppConfRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_ConfRes_AppConfRes_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rConfRes.proto\022\tblackhole\"\244\001\n\007ConfRes\0221" +
      "\n\nappConfRes\030\001 \003(\0132\035.blackhole.ConfRes.A" +
      "ppConfRes\032f\n\nAppConfRes\022\020\n\010app_name\030\001 \002(" +
      "\t\022\022\n\nwatch_file\030\002 \002(\t\022\024\n\006period\030\003 \002(\t:\0043" +
      "600\022\034\n\rmax_line_size\030\004 \001(\t:\00565536B.\n!com" +
      ".dp.blackhole.protocol.controlB\tConfResP" +
      "B"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_blackhole_ConfRes_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_blackhole_ConfRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_ConfRes_descriptor,
              new java.lang.String[] { "AppConfRes", },
              com.dp.blackhole.protocol.control.ConfResPB.ConfRes.class,
              com.dp.blackhole.protocol.control.ConfResPB.ConfRes.Builder.class);
          internal_static_blackhole_ConfRes_AppConfRes_descriptor =
            internal_static_blackhole_ConfRes_descriptor.getNestedTypes().get(0);
          internal_static_blackhole_ConfRes_AppConfRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_ConfRes_AppConfRes_descriptor,
              new java.lang.String[] { "AppName", "WatchFile", "Period", "MaxLineSize", },
              com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.class,
              com.dp.blackhole.protocol.control.ConfResPB.ConfRes.AppConfRes.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
