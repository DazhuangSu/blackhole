// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonConfRes.proto

package com.dp.blackhole.protocol.control;

public final class CommonConfResPB {
  private CommonConfResPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CommonConfResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 max_line_size = 1 [default = 512000];
    /**
     * <code>optional int32 max_line_size = 1 [default = 512000];</code>
     */
    boolean hasMaxLineSize();
    /**
     * <code>optional int32 max_line_size = 1 [default = 512000];</code>
     */
    int getMaxLineSize();

    // optional int32 min_msg_sent = 2 [default = 30];
    /**
     * <code>optional int32 min_msg_sent = 2 [default = 30];</code>
     */
    boolean hasMinMsgSent();
    /**
     * <code>optional int32 min_msg_sent = 2 [default = 30];</code>
     */
    int getMinMsgSent();

    // optional int32 msg_buf_size = 3 [default = 512000];
    /**
     * <code>optional int32 msg_buf_size = 3 [default = 512000];</code>
     */
    boolean hasMsgBufSize();
    /**
     * <code>optional int32 msg_buf_size = 3 [default = 512000];</code>
     */
    int getMsgBufSize();

    // optional int32 roll_period = 4;
    /**
     * <code>optional int32 roll_period = 4;</code>
     */
    boolean hasRollPeriod();
    /**
     * <code>optional int32 roll_period = 4;</code>
     */
    int getRollPeriod();

    // optional int32 partition_factor = 5 [default = 1];
    /**
     * <code>optional int32 partition_factor = 5 [default = 1];</code>
     */
    boolean hasPartitionFactor();
    /**
     * <code>optional int32 partition_factor = 5 [default = 1];</code>
     */
    int getPartitionFactor();
  }
  /**
   * Protobuf type {@code blackhole.CommonConfRes}
   */
  public static final class CommonConfRes extends
      com.google.protobuf.GeneratedMessage
      implements CommonConfResOrBuilder {
    // Use CommonConfRes.newBuilder() to construct.
    private CommonConfRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CommonConfRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CommonConfRes defaultInstance;
    public static CommonConfRes getDefaultInstance() {
      return defaultInstance;
    }

    public CommonConfRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CommonConfRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              maxLineSize_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minMsgSent_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgBufSize_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rollPeriod_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              partitionFactor_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dp.blackhole.protocol.control.CommonConfResPB.internal_static_blackhole_CommonConfRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dp.blackhole.protocol.control.CommonConfResPB.internal_static_blackhole_CommonConfRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes.class, com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes.Builder.class);
    }

    public static com.google.protobuf.Parser<CommonConfRes> PARSER =
        new com.google.protobuf.AbstractParser<CommonConfRes>() {
      public CommonConfRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommonConfRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CommonConfRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 max_line_size = 1 [default = 512000];
    public static final int MAX_LINE_SIZE_FIELD_NUMBER = 1;
    private int maxLineSize_;
    /**
     * <code>optional int32 max_line_size = 1 [default = 512000];</code>
     */
    public boolean hasMaxLineSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 max_line_size = 1 [default = 512000];</code>
     */
    public int getMaxLineSize() {
      return maxLineSize_;
    }

    // optional int32 min_msg_sent = 2 [default = 30];
    public static final int MIN_MSG_SENT_FIELD_NUMBER = 2;
    private int minMsgSent_;
    /**
     * <code>optional int32 min_msg_sent = 2 [default = 30];</code>
     */
    public boolean hasMinMsgSent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 min_msg_sent = 2 [default = 30];</code>
     */
    public int getMinMsgSent() {
      return minMsgSent_;
    }

    // optional int32 msg_buf_size = 3 [default = 512000];
    public static final int MSG_BUF_SIZE_FIELD_NUMBER = 3;
    private int msgBufSize_;
    /**
     * <code>optional int32 msg_buf_size = 3 [default = 512000];</code>
     */
    public boolean hasMsgBufSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 msg_buf_size = 3 [default = 512000];</code>
     */
    public int getMsgBufSize() {
      return msgBufSize_;
    }

    // optional int32 roll_period = 4;
    public static final int ROLL_PERIOD_FIELD_NUMBER = 4;
    private int rollPeriod_;
    /**
     * <code>optional int32 roll_period = 4;</code>
     */
    public boolean hasRollPeriod() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 roll_period = 4;</code>
     */
    public int getRollPeriod() {
      return rollPeriod_;
    }

    // optional int32 partition_factor = 5 [default = 1];
    public static final int PARTITION_FACTOR_FIELD_NUMBER = 5;
    private int partitionFactor_;
    /**
     * <code>optional int32 partition_factor = 5 [default = 1];</code>
     */
    public boolean hasPartitionFactor() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 partition_factor = 5 [default = 1];</code>
     */
    public int getPartitionFactor() {
      return partitionFactor_;
    }

    private void initFields() {
      maxLineSize_ = 512000;
      minMsgSent_ = 30;
      msgBufSize_ = 512000;
      rollPeriod_ = 0;
      partitionFactor_ = 1;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, maxLineSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, minMsgSent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, msgBufSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, rollPeriod_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, partitionFactor_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxLineSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minMsgSent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, msgBufSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rollPeriod_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, partitionFactor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blackhole.CommonConfRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dp.blackhole.protocol.control.CommonConfResPB.internal_static_blackhole_CommonConfRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dp.blackhole.protocol.control.CommonConfResPB.internal_static_blackhole_CommonConfRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes.class, com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes.Builder.class);
      }

      // Construct using com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxLineSize_ = 512000;
        bitField0_ = (bitField0_ & ~0x00000001);
        minMsgSent_ = 30;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgBufSize_ = 512000;
        bitField0_ = (bitField0_ & ~0x00000004);
        rollPeriod_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        partitionFactor_ = 1;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dp.blackhole.protocol.control.CommonConfResPB.internal_static_blackhole_CommonConfRes_descriptor;
      }

      public com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes getDefaultInstanceForType() {
        return com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes.getDefaultInstance();
      }

      public com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes build() {
        com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes buildPartial() {
        com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes result = new com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxLineSize_ = maxLineSize_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minMsgSent_ = minMsgSent_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgBufSize_ = msgBufSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rollPeriod_ = rollPeriod_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.partitionFactor_ = partitionFactor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes) {
          return mergeFrom((com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes other) {
        if (other == com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes.getDefaultInstance()) return this;
        if (other.hasMaxLineSize()) {
          setMaxLineSize(other.getMaxLineSize());
        }
        if (other.hasMinMsgSent()) {
          setMinMsgSent(other.getMinMsgSent());
        }
        if (other.hasMsgBufSize()) {
          setMsgBufSize(other.getMsgBufSize());
        }
        if (other.hasRollPeriod()) {
          setRollPeriod(other.getRollPeriod());
        }
        if (other.hasPartitionFactor()) {
          setPartitionFactor(other.getPartitionFactor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dp.blackhole.protocol.control.CommonConfResPB.CommonConfRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 max_line_size = 1 [default = 512000];
      private int maxLineSize_ = 512000;
      /**
       * <code>optional int32 max_line_size = 1 [default = 512000];</code>
       */
      public boolean hasMaxLineSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 max_line_size = 1 [default = 512000];</code>
       */
      public int getMaxLineSize() {
        return maxLineSize_;
      }
      /**
       * <code>optional int32 max_line_size = 1 [default = 512000];</code>
       */
      public Builder setMaxLineSize(int value) {
        bitField0_ |= 0x00000001;
        maxLineSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_line_size = 1 [default = 512000];</code>
       */
      public Builder clearMaxLineSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxLineSize_ = 512000;
        onChanged();
        return this;
      }

      // optional int32 min_msg_sent = 2 [default = 30];
      private int minMsgSent_ = 30;
      /**
       * <code>optional int32 min_msg_sent = 2 [default = 30];</code>
       */
      public boolean hasMinMsgSent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 min_msg_sent = 2 [default = 30];</code>
       */
      public int getMinMsgSent() {
        return minMsgSent_;
      }
      /**
       * <code>optional int32 min_msg_sent = 2 [default = 30];</code>
       */
      public Builder setMinMsgSent(int value) {
        bitField0_ |= 0x00000002;
        minMsgSent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_msg_sent = 2 [default = 30];</code>
       */
      public Builder clearMinMsgSent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minMsgSent_ = 30;
        onChanged();
        return this;
      }

      // optional int32 msg_buf_size = 3 [default = 512000];
      private int msgBufSize_ = 512000;
      /**
       * <code>optional int32 msg_buf_size = 3 [default = 512000];</code>
       */
      public boolean hasMsgBufSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 msg_buf_size = 3 [default = 512000];</code>
       */
      public int getMsgBufSize() {
        return msgBufSize_;
      }
      /**
       * <code>optional int32 msg_buf_size = 3 [default = 512000];</code>
       */
      public Builder setMsgBufSize(int value) {
        bitField0_ |= 0x00000004;
        msgBufSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 msg_buf_size = 3 [default = 512000];</code>
       */
      public Builder clearMsgBufSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgBufSize_ = 512000;
        onChanged();
        return this;
      }

      // optional int32 roll_period = 4;
      private int rollPeriod_ ;
      /**
       * <code>optional int32 roll_period = 4;</code>
       */
      public boolean hasRollPeriod() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 roll_period = 4;</code>
       */
      public int getRollPeriod() {
        return rollPeriod_;
      }
      /**
       * <code>optional int32 roll_period = 4;</code>
       */
      public Builder setRollPeriod(int value) {
        bitField0_ |= 0x00000008;
        rollPeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roll_period = 4;</code>
       */
      public Builder clearRollPeriod() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rollPeriod_ = 0;
        onChanged();
        return this;
      }

      // optional int32 partition_factor = 5 [default = 1];
      private int partitionFactor_ = 1;
      /**
       * <code>optional int32 partition_factor = 5 [default = 1];</code>
       */
      public boolean hasPartitionFactor() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 partition_factor = 5 [default = 1];</code>
       */
      public int getPartitionFactor() {
        return partitionFactor_;
      }
      /**
       * <code>optional int32 partition_factor = 5 [default = 1];</code>
       */
      public Builder setPartitionFactor(int value) {
        bitField0_ |= 0x00000010;
        partitionFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 partition_factor = 5 [default = 1];</code>
       */
      public Builder clearPartitionFactor() {
        bitField0_ = (bitField0_ & ~0x00000010);
        partitionFactor_ = 1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:blackhole.CommonConfRes)
    }

    static {
      defaultInstance = new CommonConfRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:blackhole.CommonConfRes)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_CommonConfRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_CommonConfRes_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023CommonConfRes.proto\022\tblackhole\"\230\001\n\rCom" +
      "monConfRes\022\035\n\rmax_line_size\030\001 \001(\005:\00651200" +
      "0\022\030\n\014min_msg_sent\030\002 \001(\005:\00230\022\034\n\014msg_buf_s" +
      "ize\030\003 \001(\005:\006512000\022\023\n\013roll_period\030\004 \001(\005\022\033" +
      "\n\020partition_factor\030\005 \001(\005:\0011B4\n!com.dp.bl" +
      "ackhole.protocol.controlB\017CommonConfResP" +
      "B"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_blackhole_CommonConfRes_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_blackhole_CommonConfRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_CommonConfRes_descriptor,
              new java.lang.String[] { "MaxLineSize", "MinMsgSent", "MsgBufSize", "RollPeriod", "PartitionFactor", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
