// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DumpReply.proto

package com.dp.blackhole.protocol.control;

public final class DumpReplyPB {
  private DumpReplyPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class DumpReply extends
      com.google.protobuf.GeneratedMessage {
    // Use DumpReply.newBuilder() to construct.
    private DumpReply() {
      initFields();
    }
    private DumpReply(boolean noInit) {}
    
    private static final DumpReply defaultInstance;
    public static DumpReply getDefaultInstance() {
      return defaultInstance;
    }
    
    public DumpReply getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dp.blackhole.protocol.control.DumpReplyPB.internal_static_blackhole_DumpReply_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dp.blackhole.protocol.control.DumpReplyPB.internal_static_blackhole_DumpReply_fieldAccessorTable;
    }
    
    // required string reply = 1;
    public static final int REPLY_FIELD_NUMBER = 1;
    private boolean hasReply;
    private java.lang.String reply_ = "";
    public boolean hasReply() { return hasReply; }
    public java.lang.String getReply() { return reply_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasReply) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasReply()) {
        output.writeString(1, getReply());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasReply()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getReply());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply result;
      
      // Construct using com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply();
        return builder;
      }
      
      protected com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply.getDescriptor();
      }
      
      public com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply getDefaultInstanceForType() {
        return com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply) {
          return mergeFrom((com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply other) {
        if (other == com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply.getDefaultInstance()) return this;
        if (other.hasReply()) {
          setReply(other.getReply());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setReply(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string reply = 1;
      public boolean hasReply() {
        return result.hasReply();
      }
      public java.lang.String getReply() {
        return result.getReply();
      }
      public Builder setReply(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasReply = true;
        result.reply_ = value;
        return this;
      }
      public Builder clearReply() {
        result.hasReply = false;
        result.reply_ = getDefaultInstance().getReply();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:blackhole.DumpReply)
    }
    
    static {
      defaultInstance = new DumpReply(true);
      com.dp.blackhole.protocol.control.DumpReplyPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:blackhole.DumpReply)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_DumpReply_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_DumpReply_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017DumpReply.proto\022\tblackhole\"\032\n\tDumpRepl" +
      "y\022\r\n\005reply\030\001 \002(\tB0\n!com.dp.blackhole.pro" +
      "tocol.controlB\013DumpReplyPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_blackhole_DumpReply_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_blackhole_DumpReply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_DumpReply_descriptor,
              new java.lang.String[] { "Reply", },
              com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply.class,
              com.dp.blackhole.protocol.control.DumpReplyPB.DumpReply.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
