// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TopicReport.proto

package com.dp.blackhole.protocol.control;

public final class TopicReportPB {
  private TopicReportPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class TopicReport extends
      com.google.protobuf.GeneratedMessage {
    // Use TopicReport.newBuilder() to construct.
    private TopicReport() {
      initFields();
    }
    private TopicReport(boolean noInit) {}
    
    private static final TopicReport defaultInstance;
    public static TopicReport getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopicReport getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dp.blackhole.protocol.control.TopicReportPB.internal_static_blackhole_TopicReport_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dp.blackhole.protocol.control.TopicReportPB.internal_static_blackhole_TopicReport_fieldAccessorTable;
    }
    
    public static final class TopicEntry extends
        com.google.protobuf.GeneratedMessage {
      // Use TopicEntry.newBuilder() to construct.
      private TopicEntry() {
        initFields();
      }
      private TopicEntry(boolean noInit) {}
      
      private static final TopicEntry defaultInstance;
      public static TopicEntry getDefaultInstance() {
        return defaultInstance;
      }
      
      public TopicEntry getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dp.blackhole.protocol.control.TopicReportPB.internal_static_blackhole_TopicReport_TopicEntry_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dp.blackhole.protocol.control.TopicReportPB.internal_static_blackhole_TopicReport_TopicEntry_fieldAccessorTable;
      }
      
      // required string topic = 1;
      public static final int TOPIC_FIELD_NUMBER = 1;
      private boolean hasTopic;
      private java.lang.String topic_ = "";
      public boolean hasTopic() { return hasTopic; }
      public java.lang.String getTopic() { return topic_; }
      
      // required string partitionId = 2;
      public static final int PARTITIONID_FIELD_NUMBER = 2;
      private boolean hasPartitionId;
      private java.lang.String partitionId_ = "";
      public boolean hasPartitionId() { return hasPartitionId; }
      public java.lang.String getPartitionId() { return partitionId_; }
      
      // required int64 offset = 3;
      public static final int OFFSET_FIELD_NUMBER = 3;
      private boolean hasOffset;
      private long offset_ = 0L;
      public boolean hasOffset() { return hasOffset; }
      public long getOffset() { return offset_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasTopic) return false;
        if (!hasPartitionId) return false;
        if (!hasOffset) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasTopic()) {
          output.writeString(1, getTopic());
        }
        if (hasPartitionId()) {
          output.writeString(2, getPartitionId());
        }
        if (hasOffset()) {
          output.writeInt64(3, getOffset());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasTopic()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getTopic());
        }
        if (hasPartitionId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getPartitionId());
        }
        if (hasOffset()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, getOffset());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry result;
        
        // Construct using com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry();
          return builder;
        }
        
        protected com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.getDescriptor();
        }
        
        public com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry getDefaultInstanceForType() {
          return com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry) {
            return mergeFrom((com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry other) {
          if (other == com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.getDefaultInstance()) return this;
          if (other.hasTopic()) {
            setTopic(other.getTopic());
          }
          if (other.hasPartitionId()) {
            setPartitionId(other.getPartitionId());
          }
          if (other.hasOffset()) {
            setOffset(other.getOffset());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setTopic(input.readString());
                break;
              }
              case 18: {
                setPartitionId(input.readString());
                break;
              }
              case 24: {
                setOffset(input.readInt64());
                break;
              }
            }
          }
        }
        
        
        // required string topic = 1;
        public boolean hasTopic() {
          return result.hasTopic();
        }
        public java.lang.String getTopic() {
          return result.getTopic();
        }
        public Builder setTopic(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasTopic = true;
          result.topic_ = value;
          return this;
        }
        public Builder clearTopic() {
          result.hasTopic = false;
          result.topic_ = getDefaultInstance().getTopic();
          return this;
        }
        
        // required string partitionId = 2;
        public boolean hasPartitionId() {
          return result.hasPartitionId();
        }
        public java.lang.String getPartitionId() {
          return result.getPartitionId();
        }
        public Builder setPartitionId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasPartitionId = true;
          result.partitionId_ = value;
          return this;
        }
        public Builder clearPartitionId() {
          result.hasPartitionId = false;
          result.partitionId_ = getDefaultInstance().getPartitionId();
          return this;
        }
        
        // required int64 offset = 3;
        public boolean hasOffset() {
          return result.hasOffset();
        }
        public long getOffset() {
          return result.getOffset();
        }
        public Builder setOffset(long value) {
          result.hasOffset = true;
          result.offset_ = value;
          return this;
        }
        public Builder clearOffset() {
          result.hasOffset = false;
          result.offset_ = 0L;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:blackhole.TopicReport.TopicEntry)
      }
      
      static {
        defaultInstance = new TopicEntry(true);
        com.dp.blackhole.protocol.control.TopicReportPB.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:blackhole.TopicReport.TopicEntry)
    }
    
    // repeated .blackhole.TopicReport.TopicEntry entries = 1;
    public static final int ENTRIES_FIELD_NUMBER = 1;
    private java.util.List<com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry> entries_ =
      java.util.Collections.emptyList();
    public java.util.List<com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry> getEntriesList() {
      return entries_;
    }
    public int getEntriesCount() { return entries_.size(); }
    public com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry getEntries(int index) {
      return entries_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry element : getEntriesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry element : getEntriesList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry element : getEntriesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.TopicReportPB.TopicReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dp.blackhole.protocol.control.TopicReportPB.TopicReport prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.dp.blackhole.protocol.control.TopicReportPB.TopicReport result;
      
      // Construct using com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.dp.blackhole.protocol.control.TopicReportPB.TopicReport();
        return builder;
      }
      
      protected com.dp.blackhole.protocol.control.TopicReportPB.TopicReport internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.dp.blackhole.protocol.control.TopicReportPB.TopicReport();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.getDescriptor();
      }
      
      public com.dp.blackhole.protocol.control.TopicReportPB.TopicReport getDefaultInstanceForType() {
        return com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.dp.blackhole.protocol.control.TopicReportPB.TopicReport build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.dp.blackhole.protocol.control.TopicReportPB.TopicReport buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.dp.blackhole.protocol.control.TopicReportPB.TopicReport buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.entries_ != java.util.Collections.EMPTY_LIST) {
          result.entries_ =
            java.util.Collections.unmodifiableList(result.entries_);
        }
        com.dp.blackhole.protocol.control.TopicReportPB.TopicReport returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dp.blackhole.protocol.control.TopicReportPB.TopicReport) {
          return mergeFrom((com.dp.blackhole.protocol.control.TopicReportPB.TopicReport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.dp.blackhole.protocol.control.TopicReportPB.TopicReport other) {
        if (other == com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.getDefaultInstance()) return this;
        if (!other.entries_.isEmpty()) {
          if (result.entries_.isEmpty()) {
            result.entries_ = new java.util.ArrayList<com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry>();
          }
          result.entries_.addAll(other.entries_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.Builder subBuilder = com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntries(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .blackhole.TopicReport.TopicEntry entries = 1;
      public java.util.List<com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry> getEntriesList() {
        return java.util.Collections.unmodifiableList(result.entries_);
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry getEntries(int index) {
        return result.getEntries(index);
      }
      public Builder setEntries(int index, com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.entries_.set(index, value);
        return this;
      }
      public Builder setEntries(int index, com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.Builder builderForValue) {
        result.entries_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEntries(com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.entries_.isEmpty()) {
          result.entries_ = new java.util.ArrayList<com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry>();
        }
        result.entries_.add(value);
        return this;
      }
      public Builder addEntries(com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.Builder builderForValue) {
        if (result.entries_.isEmpty()) {
          result.entries_ = new java.util.ArrayList<com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry>();
        }
        result.entries_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEntries(
          java.lang.Iterable<? extends com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry> values) {
        if (result.entries_.isEmpty()) {
          result.entries_ = new java.util.ArrayList<com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry>();
        }
        super.addAll(values, result.entries_);
        return this;
      }
      public Builder clearEntries() {
        result.entries_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:blackhole.TopicReport)
    }
    
    static {
      defaultInstance = new TopicReport(true);
      com.dp.blackhole.protocol.control.TopicReportPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:blackhole.TopicReport)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_TopicReport_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_TopicReport_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_TopicReport_TopicEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_TopicReport_TopicEntry_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021TopicReport.proto\022\tblackhole\"\203\001\n\013Topic" +
      "Report\0222\n\007entries\030\001 \003(\0132!.blackhole.Topi" +
      "cReport.TopicEntry\032@\n\nTopicEntry\022\r\n\005topi" +
      "c\030\001 \002(\t\022\023\n\013partitionId\030\002 \002(\t\022\016\n\006offset\030\003" +
      " \002(\003B2\n!com.dp.blackhole.protocol.contro" +
      "lB\rTopicReportPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_blackhole_TopicReport_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_blackhole_TopicReport_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_TopicReport_descriptor,
              new java.lang.String[] { "Entries", },
              com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.class,
              com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.Builder.class);
          internal_static_blackhole_TopicReport_TopicEntry_descriptor =
            internal_static_blackhole_TopicReport_descriptor.getNestedTypes().get(0);
          internal_static_blackhole_TopicReport_TopicEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_TopicReport_TopicEntry_descriptor,
              new java.lang.String[] { "Topic", "PartitionId", "Offset", },
              com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.class,
              com.dp.blackhole.protocol.control.TopicReportPB.TopicReport.TopicEntry.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
