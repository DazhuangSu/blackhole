// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RecoveryRoll.proto

package com.dp.blackhole.protocol.control;

public final class RecoveryRollPB {
  private RecoveryRollPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class RecoveryRoll extends
      com.google.protobuf.GeneratedMessage {
    // Use RecoveryRoll.newBuilder() to construct.
    private RecoveryRoll() {
      initFields();
    }
    private RecoveryRoll(boolean noInit) {}
    
    private static final RecoveryRoll defaultInstance;
    public static RecoveryRoll getDefaultInstance() {
      return defaultInstance;
    }
    
    public RecoveryRoll getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dp.blackhole.protocol.control.RecoveryRollPB.internal_static_blackhole_RecoveryRoll_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dp.blackhole.protocol.control.RecoveryRollPB.internal_static_blackhole_RecoveryRoll_fieldAccessorTable;
    }
    
    // required string app_name = 1;
    public static final int APP_NAME_FIELD_NUMBER = 1;
    private boolean hasAppName;
    private java.lang.String appName_ = "";
    public boolean hasAppName() { return hasAppName; }
    public java.lang.String getAppName() { return appName_; }
    
    // required string collector_server = 2;
    public static final int COLLECTOR_SERVER_FIELD_NUMBER = 2;
    private boolean hasCollectorServer;
    private java.lang.String collectorServer_ = "";
    public boolean hasCollectorServer() { return hasCollectorServer; }
    public java.lang.String getCollectorServer() { return collectorServer_; }
    
    // required int64 roll_ts = 3;
    public static final int ROLL_TS_FIELD_NUMBER = 3;
    private boolean hasRollTs;
    private long rollTs_ = 0L;
    public boolean hasRollTs() { return hasRollTs; }
    public long getRollTs() { return rollTs_; }
    
    // required int32 recovery_port = 4;
    public static final int RECOVERY_PORT_FIELD_NUMBER = 4;
    private boolean hasRecoveryPort;
    private int recoveryPort_ = 0;
    public boolean hasRecoveryPort() { return hasRecoveryPort; }
    public int getRecoveryPort() { return recoveryPort_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasAppName) return false;
      if (!hasCollectorServer) return false;
      if (!hasRollTs) return false;
      if (!hasRecoveryPort) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppName()) {
        output.writeString(1, getAppName());
      }
      if (hasCollectorServer()) {
        output.writeString(2, getCollectorServer());
      }
      if (hasRollTs()) {
        output.writeInt64(3, getRollTs());
      }
      if (hasRecoveryPort()) {
        output.writeInt32(4, getRecoveryPort());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getAppName());
      }
      if (hasCollectorServer()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getCollectorServer());
      }
      if (hasRollTs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getRollTs());
      }
      if (hasRecoveryPort()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getRecoveryPort());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll result;
      
      // Construct using com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll();
        return builder;
      }
      
      protected com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll.getDescriptor();
      }
      
      public com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll getDefaultInstanceForType() {
        return com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll) {
          return mergeFrom((com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll other) {
        if (other == com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll.getDefaultInstance()) return this;
        if (other.hasAppName()) {
          setAppName(other.getAppName());
        }
        if (other.hasCollectorServer()) {
          setCollectorServer(other.getCollectorServer());
        }
        if (other.hasRollTs()) {
          setRollTs(other.getRollTs());
        }
        if (other.hasRecoveryPort()) {
          setRecoveryPort(other.getRecoveryPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setAppName(input.readString());
              break;
            }
            case 18: {
              setCollectorServer(input.readString());
              break;
            }
            case 24: {
              setRollTs(input.readInt64());
              break;
            }
            case 32: {
              setRecoveryPort(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string app_name = 1;
      public boolean hasAppName() {
        return result.hasAppName();
      }
      public java.lang.String getAppName() {
        return result.getAppName();
      }
      public Builder setAppName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppName = true;
        result.appName_ = value;
        return this;
      }
      public Builder clearAppName() {
        result.hasAppName = false;
        result.appName_ = getDefaultInstance().getAppName();
        return this;
      }
      
      // required string collector_server = 2;
      public boolean hasCollectorServer() {
        return result.hasCollectorServer();
      }
      public java.lang.String getCollectorServer() {
        return result.getCollectorServer();
      }
      public Builder setCollectorServer(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCollectorServer = true;
        result.collectorServer_ = value;
        return this;
      }
      public Builder clearCollectorServer() {
        result.hasCollectorServer = false;
        result.collectorServer_ = getDefaultInstance().getCollectorServer();
        return this;
      }
      
      // required int64 roll_ts = 3;
      public boolean hasRollTs() {
        return result.hasRollTs();
      }
      public long getRollTs() {
        return result.getRollTs();
      }
      public Builder setRollTs(long value) {
        result.hasRollTs = true;
        result.rollTs_ = value;
        return this;
      }
      public Builder clearRollTs() {
        result.hasRollTs = false;
        result.rollTs_ = 0L;
        return this;
      }
      
      // required int32 recovery_port = 4;
      public boolean hasRecoveryPort() {
        return result.hasRecoveryPort();
      }
      public int getRecoveryPort() {
        return result.getRecoveryPort();
      }
      public Builder setRecoveryPort(int value) {
        result.hasRecoveryPort = true;
        result.recoveryPort_ = value;
        return this;
      }
      public Builder clearRecoveryPort() {
        result.hasRecoveryPort = false;
        result.recoveryPort_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:blackhole.RecoveryRoll)
    }
    
    static {
      defaultInstance = new RecoveryRoll(true);
      com.dp.blackhole.protocol.control.RecoveryRollPB.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:blackhole.RecoveryRoll)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_RecoveryRoll_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_RecoveryRoll_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022RecoveryRoll.proto\022\tblackhole\"b\n\014Recov" +
      "eryRoll\022\020\n\010app_name\030\001 \002(\t\022\030\n\020collector_s" +
      "erver\030\002 \002(\t\022\017\n\007roll_ts\030\003 \002(\003\022\025\n\rrecovery" +
      "_port\030\004 \002(\005B3\n!com.dp.blackhole.protocol" +
      ".controlB\016RecoveryRollPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_blackhole_RecoveryRoll_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_blackhole_RecoveryRoll_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_RecoveryRoll_descriptor,
              new java.lang.String[] { "AppName", "CollectorServer", "RollTs", "RecoveryPort", },
              com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll.class,
              com.dp.blackhole.protocol.control.RecoveryRollPB.RecoveryRoll.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
