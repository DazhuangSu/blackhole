// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AssignConsumer.proto

package com.dp.blackhole.common.gen;

public final class AssignConsumerPB {
  private AssignConsumerPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AssignConsumerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string topic = 1;
    /**
     * <code>required string topic = 1;</code>
     */
    boolean hasTopic();
    /**
     * <code>required string topic = 1;</code>
     */
    java.lang.String getTopic();
    /**
     * <code>required string topic = 1;</code>
     */
    com.google.protobuf.ByteString
        getTopicBytes();

    // repeated .blackhole.AssignConsumer.Pair pairs = 2;
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair> 
        getPairsList();
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair getPairs(int index);
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    int getPairsCount();
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    java.util.List<? extends com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder> 
        getPairsOrBuilderList();
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder getPairsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code blackhole.AssignConsumer}
   */
  public static final class AssignConsumer extends
      com.google.protobuf.GeneratedMessage
      implements AssignConsumerOrBuilder {
    // Use AssignConsumer.newBuilder() to construct.
    private AssignConsumer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AssignConsumer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AssignConsumer defaultInstance;
    public static AssignConsumer getDefaultInstance() {
      return defaultInstance;
    }

    public AssignConsumer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AssignConsumer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              topic_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                pairs_ = new java.util.ArrayList<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair>();
                mutable_bitField0_ |= 0x00000002;
              }
              pairs_.add(input.readMessage(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          pairs_ = java.util.Collections.unmodifiableList(pairs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.class, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Builder.class);
    }

    public static com.google.protobuf.Parser<AssignConsumer> PARSER =
        new com.google.protobuf.AbstractParser<AssignConsumer>() {
      public AssignConsumer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AssignConsumer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AssignConsumer> getParserForType() {
      return PARSER;
    }

    public interface BrokerOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 brokerId = 1;
      /**
       * <code>required int32 brokerId = 1;</code>
       */
      boolean hasBrokerId();
      /**
       * <code>required int32 brokerId = 1;</code>
       */
      int getBrokerId();

      // required string host = 2;
      /**
       * <code>required string host = 2;</code>
       */
      boolean hasHost();
      /**
       * <code>required string host = 2;</code>
       */
      java.lang.String getHost();
      /**
       * <code>required string host = 2;</code>
       */
      com.google.protobuf.ByteString
          getHostBytes();

      // required int32 port = 3;
      /**
       * <code>required int32 port = 3;</code>
       */
      boolean hasPort();
      /**
       * <code>required int32 port = 3;</code>
       */
      int getPort();
    }
    /**
     * Protobuf type {@code blackhole.AssignConsumer.Broker}
     */
    public static final class Broker extends
        com.google.protobuf.GeneratedMessage
        implements BrokerOrBuilder {
      // Use Broker.newBuilder() to construct.
      private Broker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Broker(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Broker defaultInstance;
      public static Broker getDefaultInstance() {
        return defaultInstance;
      }

      public Broker getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Broker(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                brokerId_ = input.readInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                host_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                port_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Broker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Broker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.class, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.Builder.class);
      }

      public static com.google.protobuf.Parser<Broker> PARSER =
          new com.google.protobuf.AbstractParser<Broker>() {
        public Broker parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Broker(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Broker> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 brokerId = 1;
      public static final int BROKERID_FIELD_NUMBER = 1;
      private int brokerId_;
      /**
       * <code>required int32 brokerId = 1;</code>
       */
      public boolean hasBrokerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 brokerId = 1;</code>
       */
      public int getBrokerId() {
        return brokerId_;
      }

      // required string host = 2;
      public static final int HOST_FIELD_NUMBER = 2;
      private java.lang.Object host_;
      /**
       * <code>required string host = 2;</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string host = 2;</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            host_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string host = 2;</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int32 port = 3;
      public static final int PORT_FIELD_NUMBER = 3;
      private int port_;
      /**
       * <code>required int32 port = 3;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }

      private void initFields() {
        brokerId_ = 0;
        host_ = "";
        port_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasBrokerId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasHost()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPort()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, brokerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getHostBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, port_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, brokerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getHostBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, port_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code blackhole.AssignConsumer.Broker}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.BrokerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Broker_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Broker_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.class, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.Builder.class);
        }

        // Construct using com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          brokerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          host_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          port_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Broker_descriptor;
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker getDefaultInstanceForType() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.getDefaultInstance();
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker build() {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker buildPartial() {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker result = new com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.brokerId_ = brokerId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.host_ = host_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.port_ = port_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker) {
            return mergeFrom((com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker other) {
          if (other == com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.getDefaultInstance()) return this;
          if (other.hasBrokerId()) {
            setBrokerId(other.getBrokerId());
          }
          if (other.hasHost()) {
            bitField0_ |= 0x00000002;
            host_ = other.host_;
            onChanged();
          }
          if (other.hasPort()) {
            setPort(other.getPort());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasBrokerId()) {
            
            return false;
          }
          if (!hasHost()) {
            
            return false;
          }
          if (!hasPort()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 brokerId = 1;
        private int brokerId_ ;
        /**
         * <code>required int32 brokerId = 1;</code>
         */
        public boolean hasBrokerId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 brokerId = 1;</code>
         */
        public int getBrokerId() {
          return brokerId_;
        }
        /**
         * <code>required int32 brokerId = 1;</code>
         */
        public Builder setBrokerId(int value) {
          bitField0_ |= 0x00000001;
          brokerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 brokerId = 1;</code>
         */
        public Builder clearBrokerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          brokerId_ = 0;
          onChanged();
          return this;
        }

        // required string host = 2;
        private java.lang.Object host_ = "";
        /**
         * <code>required string host = 2;</code>
         */
        public boolean hasHost() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string host = 2;</code>
         */
        public java.lang.String getHost() {
          java.lang.Object ref = host_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            host_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string host = 2;</code>
         */
        public com.google.protobuf.ByteString
            getHostBytes() {
          java.lang.Object ref = host_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            host_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string host = 2;</code>
         */
        public Builder setHost(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          host_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string host = 2;</code>
         */
        public Builder clearHost() {
          bitField0_ = (bitField0_ & ~0x00000002);
          host_ = getDefaultInstance().getHost();
          onChanged();
          return this;
        }
        /**
         * <code>required string host = 2;</code>
         */
        public Builder setHostBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          host_ = value;
          onChanged();
          return this;
        }

        // required int32 port = 3;
        private int port_ ;
        /**
         * <code>required int32 port = 3;</code>
         */
        public boolean hasPort() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 port = 3;</code>
         */
        public int getPort() {
          return port_;
        }
        /**
         * <code>required int32 port = 3;</code>
         */
        public Builder setPort(int value) {
          bitField0_ |= 0x00000004;
          port_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 port = 3;</code>
         */
        public Builder clearPort() {
          bitField0_ = (bitField0_ & ~0x00000004);
          port_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:blackhole.AssignConsumer.Broker)
      }

      static {
        defaultInstance = new Broker(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:blackhole.AssignConsumer.Broker)
    }

    public interface PartitionOffsetOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required .blackhole.AssignConsumer.Broker ownerBroker = 1;
      /**
       * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
       */
      boolean hasOwnerBroker();
      /**
       * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
       */
      com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker getOwnerBroker();
      /**
       * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
       */
      com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.BrokerOrBuilder getOwnerBrokerOrBuilder();

      // required string brokerPartition = 2;
      /**
       * <code>required string brokerPartition = 2;</code>
       */
      boolean hasBrokerPartition();
      /**
       * <code>required string brokerPartition = 2;</code>
       */
      java.lang.String getBrokerPartition();
      /**
       * <code>required string brokerPartition = 2;</code>
       */
      com.google.protobuf.ByteString
          getBrokerPartitionBytes();

      // required int64 offset = 3;
      /**
       * <code>required int64 offset = 3;</code>
       */
      boolean hasOffset();
      /**
       * <code>required int64 offset = 3;</code>
       */
      long getOffset();
    }
    /**
     * Protobuf type {@code blackhole.AssignConsumer.PartitionOffset}
     */
    public static final class PartitionOffset extends
        com.google.protobuf.GeneratedMessage
        implements PartitionOffsetOrBuilder {
      // Use PartitionOffset.newBuilder() to construct.
      private PartitionOffset(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PartitionOffset(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PartitionOffset defaultInstance;
      public static PartitionOffset getDefaultInstance() {
        return defaultInstance;
      }

      public PartitionOffset getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PartitionOffset(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = ownerBroker_.toBuilder();
                }
                ownerBroker_ = input.readMessage(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(ownerBroker_);
                  ownerBroker_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                brokerPartition_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                offset_ = input.readInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_PartitionOffset_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_PartitionOffset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.class, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder.class);
      }

      public static com.google.protobuf.Parser<PartitionOffset> PARSER =
          new com.google.protobuf.AbstractParser<PartitionOffset>() {
        public PartitionOffset parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PartitionOffset(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PartitionOffset> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required .blackhole.AssignConsumer.Broker ownerBroker = 1;
      public static final int OWNERBROKER_FIELD_NUMBER = 1;
      private com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker ownerBroker_;
      /**
       * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
       */
      public boolean hasOwnerBroker() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker getOwnerBroker() {
        return ownerBroker_;
      }
      /**
       * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.BrokerOrBuilder getOwnerBrokerOrBuilder() {
        return ownerBroker_;
      }

      // required string brokerPartition = 2;
      public static final int BROKERPARTITION_FIELD_NUMBER = 2;
      private java.lang.Object brokerPartition_;
      /**
       * <code>required string brokerPartition = 2;</code>
       */
      public boolean hasBrokerPartition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string brokerPartition = 2;</code>
       */
      public java.lang.String getBrokerPartition() {
        java.lang.Object ref = brokerPartition_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            brokerPartition_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string brokerPartition = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBrokerPartitionBytes() {
        java.lang.Object ref = brokerPartition_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          brokerPartition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int64 offset = 3;
      public static final int OFFSET_FIELD_NUMBER = 3;
      private long offset_;
      /**
       * <code>required int64 offset = 3;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 offset = 3;</code>
       */
      public long getOffset() {
        return offset_;
      }

      private void initFields() {
        ownerBroker_ = com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.getDefaultInstance();
        brokerPartition_ = "";
        offset_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasOwnerBroker()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBrokerPartition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasOffset()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getOwnerBroker().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, ownerBroker_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getBrokerPartitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt64(3, offset_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, ownerBroker_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getBrokerPartitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, offset_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code blackhole.AssignConsumer.PartitionOffset}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_PartitionOffset_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_PartitionOffset_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.class, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder.class);
        }

        // Construct using com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getOwnerBrokerFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (ownerBrokerBuilder_ == null) {
            ownerBroker_ = com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.getDefaultInstance();
          } else {
            ownerBrokerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          brokerPartition_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          offset_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_PartitionOffset_descriptor;
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset getDefaultInstanceForType() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.getDefaultInstance();
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset build() {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset buildPartial() {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset result = new com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (ownerBrokerBuilder_ == null) {
            result.ownerBroker_ = ownerBroker_;
          } else {
            result.ownerBroker_ = ownerBrokerBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.brokerPartition_ = brokerPartition_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.offset_ = offset_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset) {
            return mergeFrom((com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset other) {
          if (other == com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.getDefaultInstance()) return this;
          if (other.hasOwnerBroker()) {
            mergeOwnerBroker(other.getOwnerBroker());
          }
          if (other.hasBrokerPartition()) {
            bitField0_ |= 0x00000002;
            brokerPartition_ = other.brokerPartition_;
            onChanged();
          }
          if (other.hasOffset()) {
            setOffset(other.getOffset());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasOwnerBroker()) {
            
            return false;
          }
          if (!hasBrokerPartition()) {
            
            return false;
          }
          if (!hasOffset()) {
            
            return false;
          }
          if (!getOwnerBroker().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required .blackhole.AssignConsumer.Broker ownerBroker = 1;
        private com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker ownerBroker_ = com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.BrokerOrBuilder> ownerBrokerBuilder_;
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        public boolean hasOwnerBroker() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker getOwnerBroker() {
          if (ownerBrokerBuilder_ == null) {
            return ownerBroker_;
          } else {
            return ownerBrokerBuilder_.getMessage();
          }
        }
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        public Builder setOwnerBroker(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker value) {
          if (ownerBrokerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ownerBroker_ = value;
            onChanged();
          } else {
            ownerBrokerBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        public Builder setOwnerBroker(
            com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.Builder builderForValue) {
          if (ownerBrokerBuilder_ == null) {
            ownerBroker_ = builderForValue.build();
            onChanged();
          } else {
            ownerBrokerBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        public Builder mergeOwnerBroker(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker value) {
          if (ownerBrokerBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                ownerBroker_ != com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.getDefaultInstance()) {
              ownerBroker_ =
                com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.newBuilder(ownerBroker_).mergeFrom(value).buildPartial();
            } else {
              ownerBroker_ = value;
            }
            onChanged();
          } else {
            ownerBrokerBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        public Builder clearOwnerBroker() {
          if (ownerBrokerBuilder_ == null) {
            ownerBroker_ = com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.getDefaultInstance();
            onChanged();
          } else {
            ownerBrokerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.Builder getOwnerBrokerBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getOwnerBrokerFieldBuilder().getBuilder();
        }
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.BrokerOrBuilder getOwnerBrokerOrBuilder() {
          if (ownerBrokerBuilder_ != null) {
            return ownerBrokerBuilder_.getMessageOrBuilder();
          } else {
            return ownerBroker_;
          }
        }
        /**
         * <code>required .blackhole.AssignConsumer.Broker ownerBroker = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.BrokerOrBuilder> 
            getOwnerBrokerFieldBuilder() {
          if (ownerBrokerBuilder_ == null) {
            ownerBrokerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Broker.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.BrokerOrBuilder>(
                    ownerBroker_,
                    getParentForChildren(),
                    isClean());
            ownerBroker_ = null;
          }
          return ownerBrokerBuilder_;
        }

        // required string brokerPartition = 2;
        private java.lang.Object brokerPartition_ = "";
        /**
         * <code>required string brokerPartition = 2;</code>
         */
        public boolean hasBrokerPartition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string brokerPartition = 2;</code>
         */
        public java.lang.String getBrokerPartition() {
          java.lang.Object ref = brokerPartition_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            brokerPartition_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string brokerPartition = 2;</code>
         */
        public com.google.protobuf.ByteString
            getBrokerPartitionBytes() {
          java.lang.Object ref = brokerPartition_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            brokerPartition_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string brokerPartition = 2;</code>
         */
        public Builder setBrokerPartition(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          brokerPartition_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string brokerPartition = 2;</code>
         */
        public Builder clearBrokerPartition() {
          bitField0_ = (bitField0_ & ~0x00000002);
          brokerPartition_ = getDefaultInstance().getBrokerPartition();
          onChanged();
          return this;
        }
        /**
         * <code>required string brokerPartition = 2;</code>
         */
        public Builder setBrokerPartitionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          brokerPartition_ = value;
          onChanged();
          return this;
        }

        // required int64 offset = 3;
        private long offset_ ;
        /**
         * <code>required int64 offset = 3;</code>
         */
        public boolean hasOffset() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int64 offset = 3;</code>
         */
        public long getOffset() {
          return offset_;
        }
        /**
         * <code>required int64 offset = 3;</code>
         */
        public Builder setOffset(long value) {
          bitField0_ |= 0x00000004;
          offset_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int64 offset = 3;</code>
         */
        public Builder clearOffset() {
          bitField0_ = (bitField0_ & ~0x00000004);
          offset_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:blackhole.AssignConsumer.PartitionOffset)
      }

      static {
        defaultInstance = new PartitionOffset(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:blackhole.AssignConsumer.PartitionOffset)
    }

    public interface PairOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string consumerIdString = 1;
      /**
       * <code>required string consumerIdString = 1;</code>
       */
      boolean hasConsumerIdString();
      /**
       * <code>required string consumerIdString = 1;</code>
       */
      java.lang.String getConsumerIdString();
      /**
       * <code>required string consumerIdString = 1;</code>
       */
      com.google.protobuf.ByteString
          getConsumerIdStringBytes();

      // repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset> 
          getPartitionOffsetsList();
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset getPartitionOffsets(int index);
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      int getPartitionOffsetsCount();
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      java.util.List<? extends com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder> 
          getPartitionOffsetsOrBuilderList();
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder getPartitionOffsetsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code blackhole.AssignConsumer.Pair}
     */
    public static final class Pair extends
        com.google.protobuf.GeneratedMessage
        implements PairOrBuilder {
      // Use Pair.newBuilder() to construct.
      private Pair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Pair(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Pair defaultInstance;
      public static Pair getDefaultInstance() {
        return defaultInstance;
      }

      public Pair getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Pair(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                consumerIdString_ = input.readBytes();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  partitionOffsets_ = new java.util.ArrayList<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset>();
                  mutable_bitField0_ |= 0x00000002;
                }
                partitionOffsets_.add(input.readMessage(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            partitionOffsets_ = java.util.Collections.unmodifiableList(partitionOffsets_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Pair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Pair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.class, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder.class);
      }

      public static com.google.protobuf.Parser<Pair> PARSER =
          new com.google.protobuf.AbstractParser<Pair>() {
        public Pair parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Pair(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Pair> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string consumerIdString = 1;
      public static final int CONSUMERIDSTRING_FIELD_NUMBER = 1;
      private java.lang.Object consumerIdString_;
      /**
       * <code>required string consumerIdString = 1;</code>
       */
      public boolean hasConsumerIdString() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string consumerIdString = 1;</code>
       */
      public java.lang.String getConsumerIdString() {
        java.lang.Object ref = consumerIdString_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            consumerIdString_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string consumerIdString = 1;</code>
       */
      public com.google.protobuf.ByteString
          getConsumerIdStringBytes() {
        java.lang.Object ref = consumerIdString_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          consumerIdString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;
      public static final int PARTITIONOFFSETS_FIELD_NUMBER = 2;
      private java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset> partitionOffsets_;
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      public java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset> getPartitionOffsetsList() {
        return partitionOffsets_;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      public java.util.List<? extends com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder> 
          getPartitionOffsetsOrBuilderList() {
        return partitionOffsets_;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      public int getPartitionOffsetsCount() {
        return partitionOffsets_.size();
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset getPartitionOffsets(int index) {
        return partitionOffsets_.get(index);
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder getPartitionOffsetsOrBuilder(
          int index) {
        return partitionOffsets_.get(index);
      }

      private void initFields() {
        consumerIdString_ = "";
        partitionOffsets_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasConsumerIdString()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getPartitionOffsetsCount(); i++) {
          if (!getPartitionOffsets(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getConsumerIdStringBytes());
        }
        for (int i = 0; i < partitionOffsets_.size(); i++) {
          output.writeMessage(2, partitionOffsets_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getConsumerIdStringBytes());
        }
        for (int i = 0; i < partitionOffsets_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, partitionOffsets_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code blackhole.AssignConsumer.Pair}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Pair_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Pair_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.class, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder.class);
        }

        // Construct using com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPartitionOffsetsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          consumerIdString_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (partitionOffsetsBuilder_ == null) {
            partitionOffsets_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            partitionOffsetsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_Pair_descriptor;
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair getDefaultInstanceForType() {
          return com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.getDefaultInstance();
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair build() {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair buildPartial() {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair result = new com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.consumerIdString_ = consumerIdString_;
          if (partitionOffsetsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              partitionOffsets_ = java.util.Collections.unmodifiableList(partitionOffsets_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.partitionOffsets_ = partitionOffsets_;
          } else {
            result.partitionOffsets_ = partitionOffsetsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair) {
            return mergeFrom((com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair other) {
          if (other == com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.getDefaultInstance()) return this;
          if (other.hasConsumerIdString()) {
            bitField0_ |= 0x00000001;
            consumerIdString_ = other.consumerIdString_;
            onChanged();
          }
          if (partitionOffsetsBuilder_ == null) {
            if (!other.partitionOffsets_.isEmpty()) {
              if (partitionOffsets_.isEmpty()) {
                partitionOffsets_ = other.partitionOffsets_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensurePartitionOffsetsIsMutable();
                partitionOffsets_.addAll(other.partitionOffsets_);
              }
              onChanged();
            }
          } else {
            if (!other.partitionOffsets_.isEmpty()) {
              if (partitionOffsetsBuilder_.isEmpty()) {
                partitionOffsetsBuilder_.dispose();
                partitionOffsetsBuilder_ = null;
                partitionOffsets_ = other.partitionOffsets_;
                bitField0_ = (bitField0_ & ~0x00000002);
                partitionOffsetsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPartitionOffsetsFieldBuilder() : null;
              } else {
                partitionOffsetsBuilder_.addAllMessages(other.partitionOffsets_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasConsumerIdString()) {
            
            return false;
          }
          for (int i = 0; i < getPartitionOffsetsCount(); i++) {
            if (!getPartitionOffsets(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string consumerIdString = 1;
        private java.lang.Object consumerIdString_ = "";
        /**
         * <code>required string consumerIdString = 1;</code>
         */
        public boolean hasConsumerIdString() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string consumerIdString = 1;</code>
         */
        public java.lang.String getConsumerIdString() {
          java.lang.Object ref = consumerIdString_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            consumerIdString_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string consumerIdString = 1;</code>
         */
        public com.google.protobuf.ByteString
            getConsumerIdStringBytes() {
          java.lang.Object ref = consumerIdString_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            consumerIdString_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string consumerIdString = 1;</code>
         */
        public Builder setConsumerIdString(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          consumerIdString_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string consumerIdString = 1;</code>
         */
        public Builder clearConsumerIdString() {
          bitField0_ = (bitField0_ & ~0x00000001);
          consumerIdString_ = getDefaultInstance().getConsumerIdString();
          onChanged();
          return this;
        }
        /**
         * <code>required string consumerIdString = 1;</code>
         */
        public Builder setConsumerIdStringBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          consumerIdString_ = value;
          onChanged();
          return this;
        }

        // repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;
        private java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset> partitionOffsets_ =
          java.util.Collections.emptyList();
        private void ensurePartitionOffsetsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            partitionOffsets_ = new java.util.ArrayList<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset>(partitionOffsets_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder> partitionOffsetsBuilder_;

        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset> getPartitionOffsetsList() {
          if (partitionOffsetsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(partitionOffsets_);
          } else {
            return partitionOffsetsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public int getPartitionOffsetsCount() {
          if (partitionOffsetsBuilder_ == null) {
            return partitionOffsets_.size();
          } else {
            return partitionOffsetsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset getPartitionOffsets(int index) {
          if (partitionOffsetsBuilder_ == null) {
            return partitionOffsets_.get(index);
          } else {
            return partitionOffsetsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder setPartitionOffsets(
            int index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset value) {
          if (partitionOffsetsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePartitionOffsetsIsMutable();
            partitionOffsets_.set(index, value);
            onChanged();
          } else {
            partitionOffsetsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder setPartitionOffsets(
            int index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder builderForValue) {
          if (partitionOffsetsBuilder_ == null) {
            ensurePartitionOffsetsIsMutable();
            partitionOffsets_.set(index, builderForValue.build());
            onChanged();
          } else {
            partitionOffsetsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder addPartitionOffsets(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset value) {
          if (partitionOffsetsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePartitionOffsetsIsMutable();
            partitionOffsets_.add(value);
            onChanged();
          } else {
            partitionOffsetsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder addPartitionOffsets(
            int index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset value) {
          if (partitionOffsetsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePartitionOffsetsIsMutable();
            partitionOffsets_.add(index, value);
            onChanged();
          } else {
            partitionOffsetsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder addPartitionOffsets(
            com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder builderForValue) {
          if (partitionOffsetsBuilder_ == null) {
            ensurePartitionOffsetsIsMutable();
            partitionOffsets_.add(builderForValue.build());
            onChanged();
          } else {
            partitionOffsetsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder addPartitionOffsets(
            int index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder builderForValue) {
          if (partitionOffsetsBuilder_ == null) {
            ensurePartitionOffsetsIsMutable();
            partitionOffsets_.add(index, builderForValue.build());
            onChanged();
          } else {
            partitionOffsetsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder addAllPartitionOffsets(
            java.lang.Iterable<? extends com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset> values) {
          if (partitionOffsetsBuilder_ == null) {
            ensurePartitionOffsetsIsMutable();
            super.addAll(values, partitionOffsets_);
            onChanged();
          } else {
            partitionOffsetsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder clearPartitionOffsets() {
          if (partitionOffsetsBuilder_ == null) {
            partitionOffsets_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            partitionOffsetsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public Builder removePartitionOffsets(int index) {
          if (partitionOffsetsBuilder_ == null) {
            ensurePartitionOffsetsIsMutable();
            partitionOffsets_.remove(index);
            onChanged();
          } else {
            partitionOffsetsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder getPartitionOffsetsBuilder(
            int index) {
          return getPartitionOffsetsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder getPartitionOffsetsOrBuilder(
            int index) {
          if (partitionOffsetsBuilder_ == null) {
            return partitionOffsets_.get(index);  } else {
            return partitionOffsetsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public java.util.List<? extends com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder> 
             getPartitionOffsetsOrBuilderList() {
          if (partitionOffsetsBuilder_ != null) {
            return partitionOffsetsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(partitionOffsets_);
          }
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder addPartitionOffsetsBuilder() {
          return getPartitionOffsetsFieldBuilder().addBuilder(
              com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.getDefaultInstance());
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder addPartitionOffsetsBuilder(
            int index) {
          return getPartitionOffsetsFieldBuilder().addBuilder(
              index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.getDefaultInstance());
        }
        /**
         * <code>repeated .blackhole.AssignConsumer.PartitionOffset partitionOffsets = 2;</code>
         */
        public java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder> 
             getPartitionOffsetsBuilderList() {
          return getPartitionOffsetsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder> 
            getPartitionOffsetsFieldBuilder() {
          if (partitionOffsetsBuilder_ == null) {
            partitionOffsetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffset.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PartitionOffsetOrBuilder>(
                    partitionOffsets_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            partitionOffsets_ = null;
          }
          return partitionOffsetsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:blackhole.AssignConsumer.Pair)
      }

      static {
        defaultInstance = new Pair(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:blackhole.AssignConsumer.Pair)
    }

    private int bitField0_;
    // required string topic = 1;
    public static final int TOPIC_FIELD_NUMBER = 1;
    private java.lang.Object topic_;
    /**
     * <code>required string topic = 1;</code>
     */
    public boolean hasTopic() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string topic = 1;</code>
     */
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          topic_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string topic = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .blackhole.AssignConsumer.Pair pairs = 2;
    public static final int PAIRS_FIELD_NUMBER = 2;
    private java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair> pairs_;
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    public java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair> getPairsList() {
      return pairs_;
    }
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    public java.util.List<? extends com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder> 
        getPairsOrBuilderList() {
      return pairs_;
    }
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    public int getPairsCount() {
      return pairs_.size();
    }
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair getPairs(int index) {
      return pairs_.get(index);
    }
    /**
     * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
     */
    public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder getPairsOrBuilder(
        int index) {
      return pairs_.get(index);
    }

    private void initFields() {
      topic_ = "";
      pairs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTopic()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPairsCount(); i++) {
        if (!getPairs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTopicBytes());
      }
      for (int i = 0; i < pairs_.size(); i++) {
        output.writeMessage(2, pairs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTopicBytes());
      }
      for (int i = 0; i < pairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pairs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blackhole.AssignConsumer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.class, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Builder.class);
      }

      // Construct using com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPairsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topic_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (pairsBuilder_ == null) {
          pairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          pairsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.internal_static_blackhole_AssignConsumer_descriptor;
      }

      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer getDefaultInstanceForType() {
        return com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.getDefaultInstance();
      }

      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer build() {
        com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer buildPartial() {
        com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer result = new com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.topic_ = topic_;
        if (pairsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            pairs_ = java.util.Collections.unmodifiableList(pairs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.pairs_ = pairs_;
        } else {
          result.pairs_ = pairsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer) {
          return mergeFrom((com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer other) {
        if (other == com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.getDefaultInstance()) return this;
        if (other.hasTopic()) {
          bitField0_ |= 0x00000001;
          topic_ = other.topic_;
          onChanged();
        }
        if (pairsBuilder_ == null) {
          if (!other.pairs_.isEmpty()) {
            if (pairs_.isEmpty()) {
              pairs_ = other.pairs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePairsIsMutable();
              pairs_.addAll(other.pairs_);
            }
            onChanged();
          }
        } else {
          if (!other.pairs_.isEmpty()) {
            if (pairsBuilder_.isEmpty()) {
              pairsBuilder_.dispose();
              pairsBuilder_ = null;
              pairs_ = other.pairs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              pairsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPairsFieldBuilder() : null;
            } else {
              pairsBuilder_.addAllMessages(other.pairs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTopic()) {
          
          return false;
        }
        for (int i = 0; i < getPairsCount(); i++) {
          if (!getPairs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string topic = 1;
      private java.lang.Object topic_ = "";
      /**
       * <code>required string topic = 1;</code>
       */
      public boolean hasTopic() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string topic = 1;</code>
       */
      public java.lang.String getTopic() {
        java.lang.Object ref = topic_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          topic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string topic = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        java.lang.Object ref = topic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string topic = 1;</code>
       */
      public Builder setTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string topic = 1;</code>
       */
      public Builder clearTopic() {
        bitField0_ = (bitField0_ & ~0x00000001);
        topic_ = getDefaultInstance().getTopic();
        onChanged();
        return this;
      }
      /**
       * <code>required string topic = 1;</code>
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        topic_ = value;
        onChanged();
        return this;
      }

      // repeated .blackhole.AssignConsumer.Pair pairs = 2;
      private java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair> pairs_ =
        java.util.Collections.emptyList();
      private void ensurePairsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          pairs_ = new java.util.ArrayList<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair>(pairs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder> pairsBuilder_;

      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair> getPairsList() {
        if (pairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pairs_);
        } else {
          return pairsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public int getPairsCount() {
        if (pairsBuilder_ == null) {
          return pairs_.size();
        } else {
          return pairsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair getPairs(int index) {
        if (pairsBuilder_ == null) {
          return pairs_.get(index);
        } else {
          return pairsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder setPairs(
          int index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.set(index, value);
          onChanged();
        } else {
          pairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder setPairs(
          int index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder addPairs(com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.add(value);
          onChanged();
        } else {
          pairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder addPairs(
          int index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair value) {
        if (pairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePairsIsMutable();
          pairs_.add(index, value);
          onChanged();
        } else {
          pairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder addPairs(
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.add(builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder addPairs(
          int index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder builderForValue) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          pairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder addAllPairs(
          java.lang.Iterable<? extends com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair> values) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          super.addAll(values, pairs_);
          onChanged();
        } else {
          pairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder clearPairs() {
        if (pairsBuilder_ == null) {
          pairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          pairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public Builder removePairs(int index) {
        if (pairsBuilder_ == null) {
          ensurePairsIsMutable();
          pairs_.remove(index);
          onChanged();
        } else {
          pairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder getPairsBuilder(
          int index) {
        return getPairsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder getPairsOrBuilder(
          int index) {
        if (pairsBuilder_ == null) {
          return pairs_.get(index);  } else {
          return pairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public java.util.List<? extends com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder> 
           getPairsOrBuilderList() {
        if (pairsBuilder_ != null) {
          return pairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pairs_);
        }
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder addPairsBuilder() {
        return getPairsFieldBuilder().addBuilder(
            com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.getDefaultInstance());
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder addPairsBuilder(
          int index) {
        return getPairsFieldBuilder().addBuilder(
            index, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.getDefaultInstance());
      }
      /**
       * <code>repeated .blackhole.AssignConsumer.Pair pairs = 2;</code>
       */
      public java.util.List<com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder> 
           getPairsBuilderList() {
        return getPairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder> 
          getPairsFieldBuilder() {
        if (pairsBuilder_ == null) {
          pairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.Pair.Builder, com.dp.blackhole.common.gen.AssignConsumerPB.AssignConsumer.PairOrBuilder>(
                  pairs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          pairs_ = null;
        }
        return pairsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:blackhole.AssignConsumer)
    }

    static {
      defaultInstance = new AssignConsumer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:blackhole.AssignConsumer)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_AssignConsumer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_AssignConsumer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_AssignConsumer_Broker_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_AssignConsumer_Broker_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_AssignConsumer_PartitionOffset_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_AssignConsumer_PartitionOffset_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_AssignConsumer_Pair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_AssignConsumer_Pair_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024AssignConsumer.proto\022\tblackhole\"\340\002\n\016As" +
      "signConsumer\022\r\n\005topic\030\001 \002(\t\022-\n\005pairs\030\002 \003" +
      "(\0132\036.blackhole.AssignConsumer.Pair\0326\n\006Br" +
      "oker\022\020\n\010brokerId\030\001 \002(\005\022\014\n\004host\030\002 \002(\t\022\014\n\004" +
      "port\030\003 \002(\005\032q\n\017PartitionOffset\0225\n\013ownerBr" +
      "oker\030\001 \002(\0132 .blackhole.AssignConsumer.Br" +
      "oker\022\027\n\017brokerPartition\030\002 \002(\t\022\016\n\006offset\030" +
      "\003 \002(\003\032e\n\004Pair\022\030\n\020consumerIdString\030\001 \002(\t\022" +
      "C\n\020partitionOffsets\030\002 \003(\0132).blackhole.As" +
      "signConsumer.PartitionOffsetB/\n\033com.dp.b",
      "lackhole.common.genB\020AssignConsumerPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_blackhole_AssignConsumer_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_blackhole_AssignConsumer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_AssignConsumer_descriptor,
              new java.lang.String[] { "Topic", "Pairs", });
          internal_static_blackhole_AssignConsumer_Broker_descriptor =
            internal_static_blackhole_AssignConsumer_descriptor.getNestedTypes().get(0);
          internal_static_blackhole_AssignConsumer_Broker_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_AssignConsumer_Broker_descriptor,
              new java.lang.String[] { "BrokerId", "Host", "Port", });
          internal_static_blackhole_AssignConsumer_PartitionOffset_descriptor =
            internal_static_blackhole_AssignConsumer_descriptor.getNestedTypes().get(1);
          internal_static_blackhole_AssignConsumer_PartitionOffset_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_AssignConsumer_PartitionOffset_descriptor,
              new java.lang.String[] { "OwnerBroker", "BrokerPartition", "Offset", });
          internal_static_blackhole_AssignConsumer_Pair_descriptor =
            internal_static_blackhole_AssignConsumer_descriptor.getNestedTypes().get(2);
          internal_static_blackhole_AssignConsumer_Pair_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_AssignConsumer_Pair_descriptor,
              new java.lang.String[] { "ConsumerIdString", "PartitionOffsets", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
